{"version":3,"sources":["components/todoinput.js","components/todoItem.js","components/todoList.js","components/completedItems.js","components/completedList.js","App.js","serviceWorker.js","index.js"],"names":["Todoinput","this","props","item","handleChange","handleSubmit","editItem","className","onSubmit","type","placeholder","value","onChange","Component","TodoItem","title","handleDelete","handleEdit","handleStatus","onClick","TodoList","items","clearList","map","key","id","CompletedItems","itemDone","CompletedList","completedItemsList","App","state","completedItems","e","setState","target","preventDefault","newItem","console","log","updatedItems","filteredItems","filter","completedItem","find","updateCompletedItemsList","selectedItem","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"gNAEqBA,E,uKACT,IAAD,EACgDC,KAAKC,MAApDC,EADD,EACCA,KAAMC,EADP,EACOA,aAAcC,EADrB,EACqBA,aAAcC,EADnC,EACmCA,SAE1C,OACE,yBAAKC,UAAU,uBACb,0BAAMC,SAAUH,GACd,yBAAKE,UAAU,eACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,0CACb,uBAAGA,UAAU,kBAGjB,2BACEE,KAAK,OACLF,UAAU,gCACVG,YAAY,kBACZC,MAAOR,EACPS,SAAUR,KAId,4BACEK,KAAK,SACLF,UACED,EACI,iCACA,kCAGLA,EAAW,YAAc,kB,GA9BCO,aCAlBC,E,uKACT,IAAD,EACmDb,KAAKC,MAAvDa,EADD,EACCA,MAAOC,EADR,EACQA,aAAcC,EADtB,EACsBA,WAAYC,EADlC,EACkCA,aACzC,OACE,wBAAIX,UAAU,8EACZ,4BAAKQ,GAEL,yBAAKR,UAAU,aACb,0BAAMA,UAAU,oBAAoBY,QAASF,GAC3C,uBAAGV,UAAU,gBAEf,0BAAMA,UAAU,mBAAmBY,QAASH,GAC1C,uBAAGT,UAAU,kBAEf,0BAAMY,QAASD,GACb,uBAAGX,UAAU,wB,GAfaM,aCAjBO,E,uKACT,IAAD,EAOHnB,KAAKC,MALPmB,EAFK,EAELA,MAEAL,GAJK,EAGLM,UAHK,EAILN,cACAC,EALK,EAKLA,WACAC,EANK,EAMLA,aAEF,OACE,yBAAKX,UAAU,uBACb,wBAAIA,UAAU,mBACZ,wBAAIA,UAAU,+BAAd,cAECc,EAAME,KAAI,SAACpB,GACV,OACE,kBAAC,EAAD,CACEqB,IAAKrB,EAAKsB,GACVV,MAAOZ,EAAKY,MACZC,aAAc,kBAAMA,EAAab,EAAKsB,KACtCR,WAAY,kBAAMA,EAAWd,EAAKsB,KAClCP,aAAc,kBAAMA,EAAaf,EAAKsB,gB,GArBhBZ,aCAjBa,E,uKACT,IAAD,EACyBzB,KAAKC,MAA7ByB,EADD,EACCA,SADD,EACWL,UAElB,OACE,wBAAIf,UAAU,8EACXoB,O,GANmCd,aCAvBe,E,uKACT,IAAD,EACmC3B,KAAKC,MAAvC2B,EADD,EACCA,mBAAoBP,EADrB,EACqBA,UAC5B,OACE,yBAAKf,UAAU,uBACb,wBAAIA,UAAU,mBACZ,wBAAIA,UAAU,+BAAd,yBACCsB,EAAmBN,KAAI,SAACpB,GACvB,OAAO,kBAAC,EAAD,CAAgBwB,SAAUxB,EAAKY,WAExC,4BACEN,KAAK,SACLF,UAAU,gDACVY,QAASG,GAHX,8B,GAViCT,aCmG5BiB,G,kNA5FbC,MAAQ,CACNV,MAAO,GACPI,GAAI,EACJtB,KAAM,GACNG,UAAU,EACV0B,eAAgB,I,EAElB5B,aAAe,SAAC6B,GACd,EAAKC,SAAS,CAAE/B,KAAM8B,EAAEE,OAAOxB,S,EAGjCN,aAAe,SAAC4B,GACdA,EAAEG,iBACF,IAAMC,EAAU,CACdZ,GAAI,EAAKM,MAAMN,GACfV,MAAO,EAAKgB,MAAM5B,MAEpBmC,QAAQC,IAAI,EAAKR,MAAM5B,MACvB,IAAMqC,EAAY,sBAAO,EAAKT,MAAMV,OAAlB,CAAyBgB,IAC3C,EAAKH,SAAS,CACZb,MAAOmB,EACPrC,KAAM,GACNsB,GAAI,EAAKM,MAAMN,GAAK,EACpBnB,UAAU,K,EAGdgB,UAAY,WACV,EAAKY,SAAS,CAAEF,eAAgB,M,EAElChB,aAAe,SAACS,GACd,IAAMgB,EAAgB,EAAKV,MAAMV,MAAMqB,QAAO,SAACvC,GAAD,OAAUA,EAAKsB,IAAMA,KACnE,EAAKS,SAAS,CACZb,MAAOoB,K,EAIXvB,aAAe,SAACO,GACd,IAAMkB,EAAgB,EAAKZ,MAAMV,MAAMuB,MAAK,SAACzC,GAAD,OAAUA,EAAKsB,KAAOA,KAC5DgB,EAAgB,EAAKV,MAAMV,MAAMqB,QAAO,SAACvC,GAAD,OAAUA,EAAKsB,IAAMA,KAC7DoB,EAAwB,sBACzB,EAAKd,MAAMC,gBADc,CAE5BW,IAEF,EAAKT,SAAS,CACZb,MAAOoB,EACPT,eAAgBa,EAChBvC,UAAU,IAEZgC,QAAQC,IAAII,I,EAGd1B,WAAa,SAACQ,GACZ,IAAMgB,EAAgB,EAAKV,MAAMV,MAAMqB,QAAO,SAACvC,GAAD,OAAUA,EAAKsB,KAAOA,KAC9DqB,EAAe,EAAKf,MAAMV,MAAMuB,MAAK,SAACzC,GAAD,OAAUA,EAAKsB,KAAOA,KAEjE,EAAKS,SAAS,CACZb,MAAOoB,EACPtC,KAAM2C,EAAa/B,MACnBT,UAAU,EACVmB,GAAIA,K,uDAKN,OACE,yBAAKlB,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,gCACb,wBAAIA,UAAU,+BAAd,gBACA,kBAAC,EAAD,CACEJ,KAAMF,KAAK8B,MAAM5B,KACjBC,aAAcH,KAAKG,aACnBC,aAAcJ,KAAKI,aACnBC,SAAUL,KAAK8B,MAAMzB,WAEvB,kBAAC,EAAD,CACEe,MAAOpB,KAAK8B,MAAMV,MAClBL,aAAcf,KAAKe,aACnBC,WAAYhB,KAAKgB,WACjBC,aAAcjB,KAAKiB,eAErB,kBAAC,EAAD,CACEW,mBAAoB5B,KAAK8B,MAAMC,eAC/BV,UAAWrB,KAAKqB,mB,GApFZT,cCIEkC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL1B,QAAQ0B,MAAMA,EAAMC,a","file":"static/js/main.0695d33b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nexport default class Todoinput extends Component {\r\n  render() {\r\n    const { item, handleChange, handleSubmit, editItem } = this.props;\r\n\r\n    return (\r\n      <div className=\"card card-body my-3\">\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"input-group\">\r\n            <div className=\"input-group-prepend\">\r\n              <div className=\"input-group-text bg-primary text-white\">\r\n                <i className=\"fas fa-book\"></i>\r\n              </div>\r\n            </div>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control text-capitalized\"\r\n              placeholder=\"add a todo Item\"\r\n              value={item}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n\r\n          <button\r\n            type=\"submit\"\r\n            className={\r\n              editItem\r\n                ? \"btn btn-block btn-success mt-3\"\r\n                : \"btn btn-block btn-primary mt-3\"\r\n            }\r\n          >\r\n            {editItem ? \"Edit item\" : \"Add item\"}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class TodoItem extends Component {\r\n  render() {\r\n    const { title, handleDelete, handleEdit, handleStatus } = this.props;\r\n    return (\r\n      <li className=\"list-group-item text-capitalize d-inline-flex justify-content-between my-2\">\r\n        <h6>{title}</h6>\r\n\r\n        <div className=\"todo-icon\">\r\n          <span className=\"mx-2 text-success\" onClick={handleEdit}>\r\n            <i className=\"fas fa-pen\"></i>\r\n          </span>\r\n          <span className=\"mx-2 text-danger\" onClick={handleDelete}>\r\n            <i className=\"fas fa-trash\"></i>\r\n          </span>\r\n          <span onClick={handleStatus}>\r\n            <i className=\"fas fa-check\"></i>\r\n          </span>\r\n        </div>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport TodoItem from \"./todoItem\";\r\nexport default class TodoList extends Component {\r\n  render() {\r\n    const {\r\n      items,\r\n      clearList,\r\n      handleDelete,\r\n      handleEdit,\r\n      handleStatus,\r\n    } = this.props;\r\n    return (\r\n      <div className=\"card card-body my-3\">\r\n        <ul className=\"list-group my-5\">\r\n          <h3 className=\"text-capitalize text-center\"> todo List</h3>\r\n\r\n          {items.map((item) => {\r\n            return (\r\n              <TodoItem\r\n                key={item.id}\r\n                title={item.title}\r\n                handleDelete={() => handleDelete(item.id)}\r\n                handleEdit={() => handleEdit(item.id)}\r\n                handleStatus={() => handleStatus(item.id)}\r\n              />\r\n            );\r\n          })}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class CompletedItems extends Component {\r\n  render() {\r\n    const { itemDone, clearList } = this.props;\r\n\r\n    return (\r\n      <li className=\"list-group-item text-capitalize d-inline-flex justify-content-between my-2\">\r\n        {itemDone}\r\n      </li>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport CompletedItems from \"./completedItems\";\r\nexport default class CompletedList extends Component {\r\n  render() {\r\n    const { completedItemsList, clearList } = this.props;\r\n    return (\r\n      <div className=\"card card-body my-3\">\r\n        <ul className=\"list-group my-5\">\r\n          <h4 className=\"text-capitalize text-center\"> Completed Todo List </h4>\r\n          {completedItemsList.map((item) => {\r\n            return <CompletedItems itemDone={item.title} />;\r\n          })}\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-danger btn-block text-capitalize mt-5\"\r\n            onClick={clearList}\r\n          >\r\n            Clear Completed List\r\n          </button>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\nimport Todoinput from \"./components/todoinput\";\nimport TodoList from \"./components/todoList\";\nimport CompletedList from \"./components/completedList\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport uuid from \"uuid\";\n\nclass App extends Component {\n  state = {\n    items: [],\n    id: 0,\n    item: \"\",\n    editItem: false,\n    completedItems: [],\n  };\n  handleChange = (e) => {\n    this.setState({ item: e.target.value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const newItem = {\n      id: this.state.id,\n      title: this.state.item,\n    };\n    console.log(this.state.item);\n    const updatedItems = [...this.state.items, newItem];\n    this.setState({\n      items: updatedItems,\n      item: \"\",\n      id: this.state.id + 1,\n      editItem: false,\n    });\n  };\n  clearList = () => {\n    this.setState({ completedItems: [] });\n  };\n  handleDelete = (id) => {\n    const filteredItems = this.state.items.filter((item) => item.id != id);\n    this.setState({\n      items: filteredItems,\n    });\n  };\n\n  handleStatus = (id) => {\n    const completedItem = this.state.items.find((item) => item.id === id);\n    const filteredItems = this.state.items.filter((item) => item.id != id);\n    const updateCompletedItemsList = [\n      ...this.state.completedItems,\n      completedItem,\n    ];\n    this.setState({\n      items: filteredItems,\n      completedItems: updateCompletedItemsList,\n      editItem: false,\n    });\n    console.log(completedItem);\n  };\n\n  handleEdit = (id) => {\n    const filteredItems = this.state.items.filter((item) => item.id !== id);\n    const selectedItem = this.state.items.find((item) => item.id === id);\n\n    this.setState({\n      items: filteredItems,\n      item: selectedItem.title,\n      editItem: true,\n      id: id,\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-10 mx-auto col-md-8 mt-4\">\n            <h2 className=\"text-capitalize text-center\">My ToDo List</h2>\n            <Todoinput\n              item={this.state.item}\n              handleChange={this.handleChange}\n              handleSubmit={this.handleSubmit}\n              editItem={this.state.editItem}\n            />\n            <TodoList\n              items={this.state.items}\n              handleDelete={this.handleDelete}\n              handleEdit={this.handleEdit}\n              handleStatus={this.handleStatus}\n            />\n            <CompletedList\n              completedItemsList={this.state.completedItems}\n              clearList={this.clearList}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}